{"version":3,"sources":["assets/goap/GotoFireAction.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,4DAA2D;AAG3D,+DAA8D;AAC9D,kDAA6C;AAC7C,uDAAsD;AAGtD;IAAoC,kCAAU;IAI7C;QAAA,YACC,iBAAO,SAKP;QATO,WAAK,GAAY,KAAK,CAAA;QACtB,eAAS,GAAW,CAAC,CAAC;QACtB,kBAAY,GAAW,CAAC,CAAC,CAAC,UAAU;QAG3C,KAAI,CAAC,eAAe,CAAC,mCAAgB,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC,4BAA4B;QACpF,KAAI,CAAC,eAAe,CAAC,mCAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC,4BAA4B;QACpF,KAAI,CAAC,SAAS,CAAC,mCAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QAC/C,KAAI,CAAC,SAAS,CAAC,mCAAgB,CAAC,SAAS,EAAE,KAAK,CAAC,CAAA;;IAClD,CAAC;IAEM,8BAAK,GAAZ;QACC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IACpB,CAAC;IAEM,+BAAM,GAAb;QACC,OAAO,IAAI,CAAC,KAAK,CAAC;IACnB,CAAC;IAEM,wCAAe,GAAtB;QACC,OAAO,IAAI,CAAC;IACb,CAAC;IACM,oDAA2B,GAAlC,UAAmC,KAAkB;QACpD,IAAI,CAAC,MAAM,GAAG,yBAAW,CAAC,UAAU,CAAC;QACrC,OAAO,IAAI,CAAC,MAAM,IAAI,IAAI,CAAA;QAC1B,iDAAiD;QACjD,sDAAsD;QACtD,qCAAqC;QACrC,+BAA+B;QAE/B,4BAA4B;QAC5B,0BAA0B;QAC1B,uCAAuC;QACvC,oBAAoB;QACpB,8CAA8C;QAC9C,YAAY;QACZ,yCAAyC;QACzC,mDAAmD;QACnD,8BAA8B;QAC9B,sCAAsC;QACtC,qBAAqB;QACrB,yBAAyB;QACzB,MAAM;QACN,KAAK;QACL,IAAI;QACJ,uBAAuB;QACvB,iBAAiB;QAEjB,yBAAyB;QAEzB,0BAA0B;IAC3B,CAAC;IAEM,gCAAO,GAAd,UAAe,KAAY;QAC1B,IAAI,MAAM,GAAG,KAAe,CAAC;QAC7B,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC;YACtB,IAAI,CAAC,SAAS,GAAG,kBAAQ,CAAC,OAAO,EAAE,CAAC;QAErC,IAAI,kBAAQ,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE;YAC5D,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,mCAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAA;YAClD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAA;YACjB,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,mCAAgB,CAAC,UAAU,EAAE,KAAK,CAAC,CAAA;YACrD,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,mCAAgB,CAAC,OAAO,EAAE,KAAK,CAAC,CAAA;YAClD,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,mCAAgB,CAAC,SAAS,EAAE,KAAK,CAAC,CAAA;YACpD,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,mCAAgB,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAA;SACnD;QACD,OAAO,IAAI,CAAC;IACb,CAAC;IACF,qBAAC;AAAD,CAtEA,AAsEC,CAtEmC,uBAAU,GAsE7C;AAtEY,wCAAc","file":"","sourceRoot":"/","sourcesContent":["import { GoapAction } from \"../src/app/ai/goap/GoapAction\";\nimport { IGoap } from \"../src/app/ai/goap/IGoap\";\nimport { VGameObject } from \"../src/app/base/VGameObject\";\nimport { Environment } from \"../src/app/gamedata/Environment\";\nimport TimeUtil from \"../src/utils/TimeUtil\";\nimport { ActionDataStatus } from \"./ActionDataStatus\";\nimport Entity from \"./Entity\";\n\nexport class GotoFireAction extends GoapAction {\n\tprivate bDone: boolean = false\n\tprivate startTime: number = 0;\n\tprivate workDuration: number = 2; // seconds\n\tpublic constructor() {\n\t\tsuper();\n\t\tthis.addPrecondition(ActionDataStatus.isFireOk, false); // we need a tool to do this\n\t\tthis.addPrecondition(ActionDataStatus.isEquipOk, true); // we need a tool to do this\n\t\tthis.addEffect(ActionDataStatus.outFire, true);\n\t\tthis.addEffect(ActionDataStatus.isEquipOk, false)\n\t}\n\n\tpublic reset(): void {\n\t\tthis.bDone = false;\n\t\tthis.startTime = 0;\n\t}\n\n\tpublic isDone() {\n\t\treturn this.bDone;\n\t}\n\n\tpublic requiresInRange() {\n\t\treturn true;\n\t}\n\tpublic checkProceduralPrecondition(agent: VGameObject): boolean {\n\t\tthis.target = Environment.fireTarget;\n\t\treturn this.target != null\n\t\t// // TODO:find the nearest tree that we can chop\n\t\t// let trees: TreeComponent[] = Environment.treeComps;\n\t\t// let closest: TreeComponent = null;\n\t\t// let closestDist: number = 0;\n\n\t\t// for (let tree of trees) {\n\t\t// \tif (closest == null) {\n\t\t// \t\t// first one, so choose it for now\n\t\t// \t\tclosest = tree;\n\t\t// \t\tclosestDist = tree.distanceSquare(agent);\n\t\t// \t} else {\n\t\t// \t\t// is this one closer than the last?\n\t\t// \t\tlet dist: number = tree.distanceSquare(agent);\n\t\t// \t\tif (dist < closestDist) {\n\t\t// \t\t\t// we found a closer one, use it\n\t\t// \t\t\tclosest = tree;\n\t\t// \t\t\tclosestDist = dist;\n\t\t// \t\t}\n\t\t// \t}\n\t\t// }\n\t\t// if (closest == null)\n\t\t// \treturn false;\n\n\t\t// this.target = closest;\n\n\t\t// return closest != null;\n\t}\n\n\tpublic perform(iGoap: IGoap): boolean {\n\t\tlet entity = iGoap as Entity;\n\t\tif (this.startTime == 0)\n\t\t\tthis.startTime = TimeUtil.getTime();\n\n\t\tif (TimeUtil.getTime() - this.startTime > this.workDuration) {\n\t\t\tentity.memory.set(ActionDataStatus.isFireOk, true)\n\t\t\tthis.bDone = true\n\t\t\tentity.memory.set(ActionDataStatus.isTolietOk, false)\n\t\t\tentity.memory.set(ActionDataStatus.isEatOk, false)\n\t\t\tentity.memory.set(ActionDataStatus.isEquipOk, false)\n\t\t\tentity.memory.set(ActionDataStatus.isFireOk, false)\n\t\t}\n\t\treturn true;\n\t}\n}"]}