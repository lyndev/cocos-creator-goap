{"version":3,"sources":["assets/src/app/gamedata/actions/ChopTreeAction.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import TimeUtil from \"../../../utils/TimeUtil\";\nimport { ActionStatus } from \"../../ai/goap/ActionStatus\";\nimport { GoapAction } from \"../../ai/goap/GoapAction\";\nimport { IGoap } from \"../../ai/goap/IGoap\";\nimport { VGameObject } from \"../../base/VGameObject\";\nimport { BackPackComponent } from \"../BackPackComponent\";\nimport { Environment } from \"../Environment\";\nimport { Labourer } from \"../labourers/Labourer\";\nimport { ToolComponent } from \"../ToolComponent\";\nimport { TreeComponent } from \"../TreeComponent\";\n\n/*\n * @Description: \n * @Author: RannarYang \n * @Date: 2018-09-06 00:09:12 \n * @Last Modified by: RannarYang\n * @Last Modified time: 2018-10-28 11:32:23\n */\nexport class ChopTreeAction extends GoapAction {\n\tprivate chopped: boolean = false;\n\n\tprivate startTime: number = 0;\n\tprivate workDuration: number = 2; // seconds\n\tpublic constructor() {\n\t\tsuper();\n\t\tthis.addPrecondition(ActionStatus.HasTool, true); // we need a tool to do this\n\t\tthis.addPrecondition(ActionStatus.HasLogs, false); // if we have logs we don't want more\n\t\tthis.addEffect(ActionStatus.HasLogs, true);\n\t}\n\tpublic reset(): void {\n\t\tthis.chopped = false;\n\t\tthis.startTime = 0;\n\t}\n\n\tpublic isDone() {\n\t\treturn this.chopped;\n\t}\n\n\tpublic requiresInRange() {\n\t\treturn true;\n\t}\n\tpublic checkProceduralPrecondition(agent: VGameObject): boolean {\n\t\t// TODO:find the nearest tree that we can chop\n\t\tlet trees: TreeComponent[] = Environment.treeComps;\n\t\tlet closest: TreeComponent = null;\n\t\tlet closestDist: number = 0;\n\n\t\tfor (let tree of trees) {\n\t\t\tif (closest == null) {\n\t\t\t\t// first one, so choose it for now\n\t\t\t\tclosest = tree;\n\t\t\t\tclosestDist = tree.distanceSquare(agent);\n\t\t\t} else {\n\t\t\t\t// is this one closer than the last?\n\t\t\t\tlet dist: number = tree.distanceSquare(agent);\n\t\t\t\tif (dist < closestDist) {\n\t\t\t\t\t// we found a closer one, use it\n\t\t\t\t\tclosest = tree;\n\t\t\t\t\tclosestDist = dist;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (closest == null)\n\t\t\treturn false;\n\n\t\tthis.target = closest;\n\n\t\treturn closest != null;\n\t}\n\n\tpublic perform(iGoap: IGoap): boolean {\n\t\tlet labourer = iGoap as Labourer;\n\t\tif (this.startTime == 0)\n\t\t\tthis.startTime = TimeUtil.getTime();\n\n\t\tif (TimeUtil.getTime() - this.startTime > this.workDuration) {\n\t\t\t// finished chopping\n\t\t\tlet backpack: BackPackComponent = labourer.backpack;\n\t\t\tbackpack.numLogs += 1;\n\t\t\tthis.chopped = true;\n\t\t\tlet tool: ToolComponent = labourer.tool;\n\t\t\ttool.use(0.34);\n\t\t\tconsole.log(\"使用工具\", this.constructor.name)\n\t\t\tif (tool.destroyed()) {\n\t\t\t\t// TODO: Destroy(backpack.tool);\n\t\t\t\t// backpack.tool = null;\n\t\t\t\tlabourer.destroyTool();\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}"]}