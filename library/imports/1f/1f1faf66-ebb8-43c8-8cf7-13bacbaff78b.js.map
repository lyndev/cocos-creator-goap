{"version":3,"sources":["assets/src/app/ai/goap/GoapAgent.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,oDAAkD;AAClD,oDAAkD;AAClD,oDAAkD;AAClD,sEAAoE;AACpE,oDAAkD;AAGlD,6CAA2C;AAGrC,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAA;AAE3C;IAA+B,6BAAY;IAA3C;;IAqIA,CAAC;kBArIY,SAAS;IAOR,0BAAM,GAAhB;QACI,IAAI,CAAC,SAAS,EAAE,CAAA;QAChB,IAAI,CAAC,OAAO,GAAG,IAAI,yBAAW,EAAE,CAAA;QAChC,IAAI,CAAC,cAAc,GAAG,EAAE,CAAA;QACxB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,qBAAS,CAAC,SAAS,CAAC,CAAA;IAClD,CAAC;IAEO,6BAAS,GAAjB;QACI,IAAI,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,2BAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;QAC5D,QAAQ,CAAC,aAAa,CAAC,qBAAS,CAAC,SAAS,EAAE,IAAI,qBAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;QACrE,QAAQ,CAAC,aAAa,CAAC,qBAAS,CAAC,SAAS,EAAE,IAAI,qBAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;QACrE,QAAQ,CAAC,aAAa,CAAC,qBAAS,CAAC,kBAAkB,EAAE,IAAI,uCAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;IAC3F,CAAC;IAEM,2BAAO,GAAd;QACI,OAAO,IAAI,CAAC,IAAI,CAAA;IACpB,CAAC;IAEM,2BAAO,GAAd,UAAe,CAAC;QACZ,IAAI,CAAC,IAAI,GAAG,CAAC,CAAA;IACjB,CAAC;IAEM,8BAAU,GAAjB;QACI,OAAO,IAAI,CAAC,OAAO,CAAA;IACvB,CAAC;IAEM,uCAAmB,GAA1B;QACI,OAAO,IAAI,CAAC,gBAAgB,CAAA;IAChC,CAAC;IAEM,qCAAiB,GAAxB,UAAyB,cAA4B;QACjD,IAAI,CAAC,cAAc,GAAG,cAAc,CAAA;IACxC,CAAC;IAEM,sCAAkB,GAAzB;QACI,OAAO,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAA;IACjC,CAAC;IAEM,yCAAqB,GAA5B;QACI,OAAO,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAA;IACtC,CAAC;IAEM,qCAAiB,GAAxB;QACI,OAAO,IAAI,CAAC,cAAc,CAAA;IAC9B,CAAC;IAEM,+BAAW,GAAlB,UAAmB,GAAW,EAAE,GAAS,EAAE,OAAiB;QACxD,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,CAAC,CAAA;IAChD,CAAC;IAEM,0BAAM,GAAb,UAAc,KAAa;QACvB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;IAC/B,CAAC;IACM,6BAAS,GAAhB,UAAiB,CAAa;QAC1B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;IACjC,CAAC;IAEM,6BAAS,GAAhB,UAAuC,GAAkB;QACrD,KAAmB,UAAqB,EAArB,KAAA,IAAI,CAAC,gBAAgB,EAArB,cAAqB,EAArB,IAAqB,EAAE;YAArC,IAAI,MAAM,SAAA;YACX,IAAI,MAAM,YAAY,GAAG,EAAE;gBACvB,OAAO,MAAM,CAAA;aAChB;SACJ;QACD,OAAO,IAAI,CAAA;IACf,CAAC;IACM,gCAAY,GAAnB,UAAoB,MAAkB;QAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC9D,IAAI,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,MAAM,EAAE;gBACpC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;gBAClC,OAAM;aACT;SACJ;IACL,CAAC;IAEM,iCAAa,GAApB;QACI,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAA;IACzC,CAAC;IAEM,mCAAe,GAAtB;QACI,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAA;IAClC,CAAC;IAEM,wCAAoB,GAA3B;QACI,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAA;IACpC,CAAC;IAEO,+BAAW,GAAnB;QACI,IAAI,OAAO,GAAiB,IAAI,CAAC,mBAAmB,EAAE,CAAA;QACtD,KAAmB,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO,EAAE;YAAvB,IAAI,MAAM,gBAAA;YACX,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;SACrC;QACD,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,WAAS,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,CAAA;IAC1E,CAAC;IACD,wDAAwD;IAC1C,0BAAgB,GAA9B,UAA+B,KAAgC;QAC3D,IAAI,CAAC,GAAW,EAAE,CAAA;QAClB,KAAK,CAAC,OAAO,CAAC,UAAC,KAAK,EAAE,GAAG;YACrB,CAAC,IAAI,GAAG,GAAG,GAAG,GAAG,KAAK,CAAA;YACtB,CAAC,IAAI,IAAI,CAAA;QACb,CAAC,CAAC,CAAA;QACF,OAAO,CAAC,CAAA;IACZ,CAAC;IAEa,iCAAuB,GAArC,UAAsC,OAAqB;QACvD,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,OAAO,CAAC,CAAA;QACjD,IAAI,CAAC,GAAW,EAAE,CAAA;QAClB,OAAO,CAAC,OAAO,CAAC,UAAC,MAAkB;YAC/B,CAAC,IAAI,MAAM,CAAC,WAAW,CAAC,IAAI,CAAA;YAC5B,CAAC,IAAI,KAAK,CAAA;QACd,CAAC,CAAC,CAAA;QACF,CAAC,IAAI,MAAM,CAAA;QACX,OAAO,CAAC,CAAA;IACZ,CAAC;IAEa,4BAAkB,GAAhC,UAAiC,OAAqB;QAClD,IAAI,CAAC,GAAW,EAAE,CAAA;QAClB,OAAO,CAAC,OAAO,CAAC,UAAC,MAAkB;YAC/B,CAAC,IAAI,MAAM,CAAC,WAAW,CAAC,IAAI,CAAA;YAC5B,CAAC,IAAI,IAAI,CAAA;QACb,CAAC,CAAC,CAAA;QACF,OAAO,CAAC,CAAA;IACZ,CAAC;IAEa,2BAAiB,GAA/B,UAAgC,MAAkB;QAC9C,OAAO,EAAE,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAA;IACvC,CAAC;;IApIQ,SAAS;QADrB,OAAO;OACK,SAAS,CAqIrB;IAAD,gBAAC;CArID,AAqIC,CArI8B,EAAE,CAAC,SAAS,GAqI1C;AArIY,8BAAS","file":"","sourceRoot":"/","sourcesContent":["import { StateEnum } from \"../fsm/state/StateEnum\"\nimport { StateIdle } from \"../fsm/state/StateIdle\"\nimport { StateMove } from \"../fsm/state/StateMove\"\nimport { StatePerformAction } from \"../fsm/state/StatePerformAction\"\nimport { StateManager } from \"../fsm/StateManager\"\nimport { ActionStatus } from \"./ActionStatus\"\nimport { GoapAction } from \"./GoapAction\"\nimport { GoapPlanner } from \"./GoapPlanner\"\nimport { IGoap } from \"./IGoap\"\n\nconst { ccclass, property } = cc._decorator\n@ccclass\nexport class GoapAgent extends cc.Component {\n    protected availableActions: GoapAction[]\n    protected currentActions: GoapAction[]\n    protected stateMgr: StateManager\n    protected goap: IGoap\n    protected planner: GoapPlanner\n\n    protected onLoad(): void {\n        this.initState()\n        this.planner = new GoapPlanner()\n        this.currentActions = []\n        this.stateMgr.changeState(StateEnum.StateIdle)\n    }\n\n    private initState() {\n        let stateMgr = (this.stateMgr = new StateManager(this.node))\n        stateMgr.registerState(StateEnum.StateIdle, new StateIdle(this.node))\n        stateMgr.registerState(StateEnum.StateMove, new StateMove(this.node))\n        stateMgr.registerState(StateEnum.StatePerformAction, new StatePerformAction(this.node))\n    }\n\n    public getGoap(): IGoap {\n        return this.goap\n    }\n\n    public setGoap(v) {\n        this.goap = v\n    }\n\n    public getPlanner(): GoapPlanner {\n        return this.planner\n    }\n\n    public getAvaliableActions(): GoapAction[] {\n        return this.availableActions\n    }\n\n    public setCurrentActions(currentActions: GoapAction[]) {\n        this.currentActions = currentActions\n    }\n\n    public peekCurrentActions(): GoapAction {\n        return this.currentActions[0]\n    }\n\n    public dequeueCurrentActions(): GoapAction {\n        return this.currentActions.shift()\n    }\n\n    public getCurrentActions(): GoapAction[] {\n        return this.currentActions\n    }\n\n    public changeState(key: string, obj?: any, isForce?: boolean) {\n        this.stateMgr.changeState(key, obj, isForce)\n    }\n\n    public update(delta: number) {\n        this.stateMgr.update(delta)\n    }\n    public addAction(a: GoapAction) {\n        this.availableActions.push(a)\n    }\n\n    public getAction<T extends GoapAction>(cls: { new (): T }) {\n        for (let action of this.availableActions) {\n            if (action instanceof cls) {\n                return action\n            }\n        }\n        return null\n    }\n    public removeAction(action: GoapAction) {\n        for (let i = 0, len = this.availableActions.length; i < len; i++) {\n            if (this.availableActions[i] == action) {\n                this.availableActions.splice(i, 1)\n                return\n            }\n        }\n    }\n\n    public hasActionPlan() {\n        return this.currentActions.length > 0\n    }\n\n    public cleanCurActions() {\n        this.currentActions.length = 0\n    }\n\n    public cleanAvalableActions() {\n        this.availableActions.length = 0\n    }\n\n    private loadActions() {\n        let actions: GoapAction[] = this.getAvaliableActions()\n        for (let action of actions) {\n            this.availableActions.push(action)\n        }\n        console.log(\"Found actions: \" + GoapAgent.prettyPrintActions(actions))\n    }\n    // 输出 ==================================================\n    public static prettyPrintState(state: Map<ActionStatus, Object>) {\n        let s: string = \"\"\n        state.forEach((value, key) => {\n            s += key + \":\" + value\n            s += \", \"\n        })\n        return s\n    }\n\n    public static prettyPrintActionsQueue(actions: GoapAction[]): string {\n        console.log(\"prettyPrintActionsQueue: \", actions)\n        let s: string = \"\"\n        actions.forEach((action: GoapAction) => {\n            s += action.constructor.name\n            s += \"-> \"\n        })\n        s += \"GOAL\"\n        return s\n    }\n\n    public static prettyPrintActions(actions: GoapAction[]) {\n        let s: string = \"\"\n        actions.forEach((action: GoapAction) => {\n            s += action.constructor.name\n            s += \", \"\n        })\n        return s\n    }\n\n    public static prettyPrintAction(action: GoapAction) {\n        return \"\" + action.constructor.name\n    }\n}\n"]}