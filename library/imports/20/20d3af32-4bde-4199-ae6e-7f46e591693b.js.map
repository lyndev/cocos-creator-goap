{"version":3,"sources":["assets/src/app/gamedata/actions/ChopFirewoodAction.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,oDAA+C;AAC/C,2DAA0D;AAC1D,uDAAsD;AAKtD,8CAA6C;AAG7C;;;;;;GAMG;AACH;IAAwC,sCAAU;IAKjD;QAAA,YACC,iBAAO,SAIP;QATO,aAAO,GAAY,KAAK,CAAC;QAEzB,eAAS,GAAW,CAAC,CAAC;QACvB,kBAAY,GAAW,CAAC,CAAC;QAG/B,KAAI,CAAC,eAAe,CAAC,2BAAY,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,4BAA4B;QAC9E,KAAI,CAAC,eAAe,CAAC,2BAAY,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC,yCAAyC;QAChG,KAAI,CAAC,SAAS,CAAC,2BAAY,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;;IAChD,CAAC;IACM,kCAAK,GAAZ;QACC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IACpB,CAAC;IACM,mCAAM,GAAb;QACC,OAAO,IAAI,CAAC,OAAO,CAAC;IACrB,CAAC;IAEM,4CAAe,GAAtB;QACC,OAAO,IAAI,CAAC;IACb,CAAC;IAEM,wDAA2B,GAAlC,UAAmC,KAAkB;QACpD,IAAI,QAAQ,GAAa,KAAiB,CAAC;QAC3C,+DAA+D;QAC/D,IAAI,MAAM,GAA6B,yBAAW,CAAC,kBAAkB,CAAC;QACtE,IAAI,OAAO,GAA2B,IAAI,CAAC;QAC3C,IAAI,WAAW,GAAW,CAAC,CAAC;QAE5B,KAAkB,UAAM,EAAN,iBAAM,EAAN,oBAAM,EAAN,IAAM,EAAE;YAArB,IAAI,KAAK,eAAA;YACb,IAAI,OAAO,IAAI,IAAI,EAAE;gBACpB,OAAO,GAAG,KAAK,CAAC;gBAChB,WAAW,GAAG,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;aAC1C;iBAAM;gBACN,oCAAoC;gBACpC,IAAI,IAAI,GAAW,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;gBAC/C,IAAI,IAAI,GAAG,WAAW,EAAE;oBACvB,gCAAgC;oBAChC,OAAO,GAAG,KAAK,CAAC;oBAChB,WAAW,GAAG,IAAI,CAAC;iBACnB;aACD;SACD;QAED,IAAI,OAAO,IAAI,IAAI;YAClB,OAAO,KAAK,CAAC;QAEd,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC;QAEtB,OAAO,OAAO,IAAI,IAAI,CAAC;IACxB,CAAC;IAEM,oCAAO,GAAd,UAAe,KAAY;QAC1B,IAAI,QAAQ,GAAG,KAAiB,CAAC;QACjC,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC;YACtB,IAAI,CAAC,SAAS,GAAG,kBAAQ,CAAC,OAAO,EAAE,CAAC;QAErC,IAAI,kBAAQ,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE;YAC5D,oBAAoB;YACpB,IAAI,QAAQ,GAAsB,QAAQ,CAAC,QAAQ,CAAC;YACpD,QAAQ,CAAC,WAAW,IAAI,CAAC,CAAC;YAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;YACzB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACf,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;gBACrB,kCAAkC;gBAClC,QAAQ,CAAC,WAAW,EAAE,CAAC;aACvB;SACD;QACD,OAAO,IAAI,CAAC;IACb,CAAC;IACF,yBAAC;AAAD,CAxEA,AAwEC,CAxEuC,uBAAU,GAwEjD;AAxEY,gDAAkB","file":"","sourceRoot":"/","sourcesContent":["import TimeUtil from \"../../../utils/TimeUtil\";\nimport { ActionStatus } from \"../../ai/goap/ActionStatus\";\nimport { GoapAction } from \"../../ai/goap/GoapAction\";\nimport { IGoap } from \"../../ai/goap/IGoap\";\nimport { VGameObject } from \"../../base/VGameObject\";\nimport { BackPackComponent } from \"../BackPackComponent\";\nimport { ChoppingBlockComponent } from \"../ChoppingBlockComponent\";\nimport { Environment } from \"../Environment\";\nimport { Labourer } from \"../labourers/Labourer\";\n\n/*\n * @Description: \n * @Author: RannarYang \n * @Date: 2018-09-06 00:09:09 \n * @Last Modified by: RannarYang\n * @Last Modified time: 2018-11-04 17:35:57\n */\nexport class ChopFirewoodAction extends GoapAction {\n\tprivate chopped: boolean = false;\n\n\tprivate startTime: number = 0;\n\tpublic workDuration: number = 2;\n\tpublic constructor() {\n\t\tsuper();\n\t\tthis.addPrecondition(ActionStatus.HasTool, true); // we need a tool to do this\n\t\tthis.addPrecondition(ActionStatus.HasFirewood, false); // if we have firewood we don't want more\n\t\tthis.addEffect(ActionStatus.HasFirewood, true);\n\t}\n\tpublic reset() {\n\t\tthis.chopped = false;\n\t\tthis.startTime = 0;\n\t}\n\tpublic isDone() {\n\t\treturn this.chopped;\n\t}\n\n\tpublic requiresInRange() {\n\t\treturn true;\n\t}\n\n\tpublic checkProceduralPrecondition(agent: VGameObject): boolean {\n\t\tlet labourer: Labourer = agent as Labourer;\n\t\t// find the nearest chopping block that we can chop our wood at\n\t\tlet blocks: ChoppingBlockComponent[] = Environment.choppingBlockComps;\n\t\tlet closest: ChoppingBlockComponent = null;\n\t\tlet closestDist: number = 0;\n\n\t\tfor (let block of blocks) {\n\t\t\tif (closest == null) {\n\t\t\t\tclosest = block;\n\t\t\t\tclosestDist = block.distanceSquare(agent);\n\t\t\t} else {\n\t\t\t\t// is this one closer than the last?\n\t\t\t\tlet dist: number = block.distanceSquare(agent);\n\t\t\t\tif (dist < closestDist) {\n\t\t\t\t\t// we found a closer one, use it\n\t\t\t\t\tclosest = block;\n\t\t\t\t\tclosestDist = dist;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (closest == null)\n\t\t\treturn false;\n\n\t\tthis.target = closest;\n\n\t\treturn closest != null;\n\t}\n\n\tpublic perform(iGoap: IGoap): boolean {\n\t\tlet labourer = iGoap as Labourer;\n\t\tif (this.startTime == 0)\n\t\t\tthis.startTime = TimeUtil.getTime();\n\n\t\tif (TimeUtil.getTime() - this.startTime > this.workDuration) {\n\t\t\t// finished chopping\n\t\t\tlet backpack: BackPackComponent = labourer.backpack;\n\t\t\tbackpack.numFirewood += 5;\n\t\t\tthis.chopped = true;\n\t\t\tlet tool = labourer.tool;\n\t\t\ttool.use(0.34);\n\t\t\tif (tool.destroyed()) {\n\t\t\t\t// TODO:删除 Destroy(backpack.tool);\n\t\t\t\tlabourer.destroyTool();\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}"]}