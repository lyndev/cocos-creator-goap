{"version":3,"sources":["assets\\goap\\GotoToiletAction.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,4DAA2D;AAG3D,+DAA8D;AAC9D,kDAA6C;AAC7C,uDAAsD;AAGtD;IAAsC,oCAAU;IAI/C;QAAA,YACC,iBAAO,SAGP;QAPO,WAAK,GAAY,KAAK,CAAA;QACtB,eAAS,GAAW,CAAC,CAAC;QACtB,kBAAY,GAAW,CAAC,CAAC,CAAC,UAAU;QAG3C,KAAI,CAAC,eAAe,CAAC,mCAAgB,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC,4BAA4B;QACtF,KAAI,CAAC,SAAS,CAAC,mCAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;;IACnD,CAAC;IAEM,gCAAK,GAAZ;QACC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IACpB,CAAC;IAEM,iCAAM,GAAb;QACC,OAAO,IAAI,CAAC,KAAK,CAAC;IACnB,CAAC;IAEM,0CAAe,GAAtB;QACC,OAAO,IAAI,CAAC;IACb,CAAC;IACM,sDAA2B,GAAlC,UAAmC,KAAkB;QACpD,IAAI,CAAC,MAAM,GAAG,yBAAW,CAAC,YAAY,CAAC;QACvC,OAAO,IAAI,CAAC,MAAM,IAAI,IAAI,CAAA;QAC1B,iDAAiD;QACjD,sDAAsD;QACtD,qCAAqC;QACrC,+BAA+B;QAE/B,4BAA4B;QAC5B,0BAA0B;QAC1B,uCAAuC;QACvC,oBAAoB;QACpB,8CAA8C;QAC9C,YAAY;QACZ,yCAAyC;QACzC,mDAAmD;QACnD,8BAA8B;QAC9B,sCAAsC;QACtC,qBAAqB;QACrB,yBAAyB;QACzB,MAAM;QACN,KAAK;QACL,IAAI;QACJ,uBAAuB;QACvB,iBAAiB;QAEjB,yBAAyB;QAEzB,0BAA0B;IAC3B,CAAC;IAEM,kCAAO,GAAd,UAAe,KAAY;QAC1B,IAAI,MAAM,GAAG,KAAe,CAAC;QAC7B,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC;YACtB,IAAI,CAAC,SAAS,GAAG,kBAAQ,CAAC,OAAO,EAAE,CAAC;QAErC,IAAI,kBAAQ,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE;YAC5D,sDAAsD;YACtD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAA;SACjB;QACD,OAAO,IAAI,CAAC;IACb,CAAC;IACF,uBAAC;AAAD,CAhEA,AAgEC,CAhEqC,uBAAU,GAgE/C;AAhEY,4CAAgB","file":"","sourceRoot":"/","sourcesContent":["import { GoapAction } from \"../src/app/ai/goap/GoapAction\";\r\nimport { IGoap } from \"../src/app/ai/goap/IGoap\";\r\nimport { VGameObject } from \"../src/app/base/VGameObject\";\r\nimport { Environment } from \"../src/app/gamedata/Environment\";\r\nimport TimeUtil from \"../src/utils/TimeUtil\";\r\nimport { ActionDataStatus } from \"./ActionDataStatus\";\r\nimport Entity from \"./Entity\";\r\n\r\nexport class GotoToiletAction extends GoapAction {\r\n\tprivate bDone: boolean = false\r\n\tprivate startTime: number = 0;\r\n\tprivate workDuration: number = 2; // seconds\r\n\tpublic constructor() {\r\n\t\tsuper();\r\n\t\tthis.addPrecondition(ActionDataStatus.isTolietOk, false); // we need a tool to do this\r\n\t\tthis.addEffect(ActionDataStatus.isTolietOk, true);\r\n\t}\r\n\r\n\tpublic reset(): void {\r\n\t\tthis.bDone = false;\r\n\t\tthis.startTime = 0;\r\n\t}\r\n\r\n\tpublic isDone() {\r\n\t\treturn this.bDone;\r\n\t}\r\n\r\n\tpublic requiresInRange() {\r\n\t\treturn true;\r\n\t}\r\n\tpublic checkProceduralPrecondition(agent: VGameObject): boolean {\r\n\t\tthis.target = Environment.toiletTarget;\r\n\t\treturn this.target != null\r\n\t\t// // TODO:find the nearest tree that we can chop\r\n\t\t// let trees: TreeComponent[] = Environment.treeComps;\r\n\t\t// let closest: TreeComponent = null;\r\n\t\t// let closestDist: number = 0;\r\n\r\n\t\t// for (let tree of trees) {\r\n\t\t// \tif (closest == null) {\r\n\t\t// \t\t// first one, so choose it for now\r\n\t\t// \t\tclosest = tree;\r\n\t\t// \t\tclosestDist = tree.distanceSquare(agent);\r\n\t\t// \t} else {\r\n\t\t// \t\t// is this one closer than the last?\r\n\t\t// \t\tlet dist: number = tree.distanceSquare(agent);\r\n\t\t// \t\tif (dist < closestDist) {\r\n\t\t// \t\t\t// we found a closer one, use it\r\n\t\t// \t\t\tclosest = tree;\r\n\t\t// \t\t\tclosestDist = dist;\r\n\t\t// \t\t}\r\n\t\t// \t}\r\n\t\t// }\r\n\t\t// if (closest == null)\r\n\t\t// \treturn false;\r\n\r\n\t\t// this.target = closest;\r\n\r\n\t\t// return closest != null;\r\n\t}\r\n\r\n\tpublic perform(iGoap: IGoap): boolean {\r\n\t\tlet entity = iGoap as Entity;\r\n\t\tif (this.startTime == 0)\r\n\t\t\tthis.startTime = TimeUtil.getTime();\r\n\r\n\t\tif (TimeUtil.getTime() - this.startTime > this.workDuration) {\r\n\t\t\t//entity.memory.set(ActionDataStatus.isTolietOk, true)\r\n\t\t\tthis.bDone = true\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n}"]}