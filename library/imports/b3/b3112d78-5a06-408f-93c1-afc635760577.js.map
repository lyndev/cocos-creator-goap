{"version":3,"sources":["assets\\goap\\actions\\ActionBuyShopItem.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,+DAA8D;AAI9D,kEAAiE;AACjE,qDAAgD;AAIhD;IAAuC,qCAAU;IAK7C;QAAA,YACI,iBAAO,SACV;QANO,WAAK,GAAY,KAAK,CAAA;QACtB,eAAS,GAAW,CAAC,CAAC;QACtB,kBAAY,GAAW,CAAC,CAAC,CAAC,UAAU;QACrC,UAAI,GAAW,CAAC,CAAA;;IAGvB,CAAC;IAEM,iCAAK,GAAZ;QACI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IACvB,CAAC;IAEM,kCAAM,GAAb;QACI,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAEM,2CAAe,GAAtB;QACI,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,uDAA2B,GAAlC,UAAmC,KAAgB;QAC/C,IAAI,yBAAW,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE;YAClC,OAAO,IAAI,CAAA;SACd;IACL,CAAC;IAEM,mCAAO,GAAd,UAAe,KAAgB;QAC3B,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC;YACnB,IAAI,CAAC,SAAS,GAAG,kBAAQ,CAAC,OAAO,EAAE,CAAC;QAExC,IAAI,kBAAQ,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE;YACzD,wDAAwD;YACxD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAA;SACpB;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IACL,wBAAC;AAAD,CAtCA,AAsCC,CAtCsC,uBAAU,GAsChD;AAtCY,8CAAiB","file":"","sourceRoot":"/","sourcesContent":["import { GoapAction } from \"../../src/app/ai/goap/GoapAction\";\r\nimport { GoapAgent } from \"../../src/app/ai/goap/GoapAgent\";\r\nimport { IGoap } from \"../../src/app/ai/goap/IGoap\";\r\nimport { VGameObject } from \"../../src/app/base/VGameObject\";\r\nimport { Environment } from \"../../src/app/gamedata/Environment\";\r\nimport TimeUtil from \"../../src/utils/TimeUtil\";\r\nimport { ActionDataStatus } from \"../ActionDataStatus\";\r\nimport Entity from \"../Entity\";\r\n\r\nexport class ActionBuyShopItem extends GoapAction {\r\n    private bDone: boolean = false\r\n    private startTime: number = 0;\r\n    private workDuration: number = 2; // seconds\r\n    public cost: number = 1\r\n    public constructor() {\r\n        super();\r\n    }\r\n\r\n    public reset(): void {\r\n        this.bDone = false;\r\n        this.startTime = 0;\r\n    }\r\n\r\n    public isDone() {\r\n        return this.bDone;\r\n    }\r\n\r\n    public requiresInRange() {\r\n        return true;\r\n    }\r\n\r\n    public checkProceduralPrecondition(agent: GoapAgent): boolean {\r\n        if (Environment.storeA.isHaveGoods()) {\r\n            return true\r\n        }\r\n    }\r\n\r\n    public perform(agent: GoapAgent): boolean {\r\n        if (this.startTime == 0)\r\n            this.startTime = TimeUtil.getTime();\r\n\r\n        if (TimeUtil.getTime() - this.startTime > this.workDuration) {\r\n            //entity.memory.set(ActionDataStatus.isCanOutfire, true)\r\n            this.bDone = true\r\n        }\r\n        return true;\r\n    }\r\n}"]}