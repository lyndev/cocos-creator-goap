{"version":3,"sources":["assets/src/app/gamedata/actions/PickUpOreAction.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,2DAAyD;AACzD,uDAAqD;AACrD,sDAAoD;AAEpD,8CAA4C;AAC5C,kDAAgD;AAGhD;IAAqC,mCAAU;IAG3C;QAAA,YACI,iBAAO,SAGV;QANO,YAAM,GAAY,KAAK,CAAA;QAI3B,KAAI,CAAC,eAAe,CAAC,2BAAY,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA,CAAC,yCAAyC;QAC1F,KAAI,CAAC,SAAS,CAAC,2BAAY,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA,CAAC,oBAAoB;;IAClE,CAAC;IAEM,+BAAK,GAAZ;QACI,IAAI,CAAC,MAAM,GAAG,KAAK,CAAA;IACvB,CAAC;IAEM,gCAAM,GAAb;QACI,OAAO,IAAI,CAAC,MAAM,CAAA;IACtB,CAAC;IAEM,yCAAe,GAAtB;QACI,OAAO,IAAI,CAAA,CAAC,iEAAiE;IACjF,CAAC;IAEM,qDAA2B,GAAlC,UAAmC,KAAc;QAC7C,kDAAkD;QAClD,IAAI,WAAW,GAA0B,yBAAW,CAAC,eAAe,CAAA;QACpE,IAAI,OAAO,GAAwB,IAAI,CAAA;QACvC,IAAI,WAAW,GAAW,CAAC,CAAA;QAC3B,IAAI,EAAE,GAAG,KAAK,CAAC,YAAY,CAAC,yBAAW,CAAC,CAAA;QACxC,KAAmB,UAAW,EAAX,2BAAW,EAAX,yBAAW,EAAX,IAAW,EAAE;YAA3B,IAAI,MAAM,oBAAA;YACX,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE;gBACpB,wBAAwB;gBACxB,IAAI,OAAO,IAAI,IAAI,EAAE;oBACjB,kCAAkC;oBAClC,OAAO,GAAG,MAAM,CAAA;oBAChB,WAAW,GAAG,MAAM,CAAC,cAAc,CAAC,EAAE,CAAC,CAAA;iBAC1C;qBAAM;oBACH,oCAAoC;oBACpC,IAAI,IAAI,GAAW,MAAM,CAAC,cAAc,CAAC,EAAE,CAAC,CAAA;oBAC5C,IAAI,IAAI,GAAG,WAAW,EAAE;wBACpB,gCAAgC;wBAChC,OAAO,GAAG,MAAM,CAAA;wBAChB,WAAW,GAAG,IAAI,CAAA;qBACrB;iBACJ;aACJ;SACJ;QACD,IAAI,OAAO,IAAI,IAAI;YAAE,OAAO,KAAK,CAAA;QAEjC,IAAI,CAAC,MAAM,GAAG,OAAO,CAAA;QAErB,OAAO,OAAO,IAAI,IAAI,CAAA;IAC1B,CAAC;IAEM,iCAAO,GAAd,UAAe,IAAa;QACxB,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE;YACzB,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,CAAA;YACvB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAA;YAClB,IAAI,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,mBAAQ,CAAC,CAAA;YAC1C,qCAAqC;YACrC,IAAI,QAAQ,GAAsB,QAAQ,CAAC,QAAQ,CAAA;YACnD,QAAQ,CAAC,MAAM,IAAI,CAAC,CAAA;YAEpB,OAAO,IAAI,CAAA;SACd;aAAM;YACH,8FAA8F;YAC9F,OAAO,KAAK,CAAA;SACf;IACL,CAAC;IACL,sBAAC;AAAD,CAnEA,AAmEC,CAnEoC,uBAAU,GAmE9C;AAnEY,0CAAe","file":"","sourceRoot":"/","sourcesContent":["import { ActionStatus } from \"../../ai/goap/ActionStatus\"\nimport { GoapAction } from \"../../ai/goap/GoapAction\"\nimport { VGameObject } from \"../../base/VGameObject\"\nimport { BackPackComponent } from \"../BackPackComponent\"\nimport { Environment } from \"../Environment\"\nimport { Labourer } from \"../labourers/Labourer\"\nimport { SupplyPileComponent } from \"../SupplyPileComponent\"\n\nexport class PickUpOreAction extends GoapAction {\n    private hasOre: boolean = false\n    public target: SupplyPileComponent // where we get the ore from\n    public constructor() {\n        super()\n        this.addPrecondition(ActionStatus.HasOre, false) // don't get a ore if we already have one\n        this.addEffect(ActionStatus.HasOre, true) // we now have a ore\n    }\n\n    public reset(): void {\n        this.hasOre = false\n    }\n\n    public isDone(): boolean {\n        return this.hasOre\n    }\n\n    public requiresInRange(): boolean {\n        return true // yes we need to be near a supply pile so we can pick up the ore\n    }\n\n    public checkProceduralPrecondition(agent: cc.Node): boolean {\n        //find the nearest supply pile that has spare ores\n        let supplyPiles: SupplyPileComponent[] = Environment.supplyPileComps\n        let closest: SupplyPileComponent = null\n        let closestDist: number = 0\n        let vg = agent.getComponent(VGameObject)\n        for (let supply of supplyPiles) {\n            if (supply.numOre >= 3) {\n                // we need to take 3 ore\n                if (closest == null) {\n                    // first one, so choose it for now\n                    closest = supply\n                    closestDist = supply.distanceSquare(vg)\n                } else {\n                    // is this one closer than the last?\n                    let dist: number = supply.distanceSquare(vg)\n                    if (dist < closestDist) {\n                        // we found a closer one, use it\n                        closest = supply\n                        closestDist = dist\n                    }\n                }\n            }\n        }\n        if (closest == null) return false\n\n        this.target = closest\n\n        return closest != null\n    }\n\n    public perform(node: cc.Node): boolean {\n        if (this.target.numOre >= 3) {\n            this.target.numOre -= 3\n            this.hasOre = true\n            let labourer = node.getComponent(Labourer)\n            //TODO play effect, change actor icon\n            let backpack: BackPackComponent = labourer.backpack\n            backpack.numOre += 3\n\n            return true\n        } else {\n            // we got there but there was no ore available! Someone got there first. Cannot perform action\n            return false\n        }\n    }\n}\n"]}