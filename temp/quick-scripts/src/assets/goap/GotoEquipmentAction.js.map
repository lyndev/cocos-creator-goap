{"version":3,"sources":["assets/goap/GotoEquipmentAction.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,4DAA0D;AAI1D,+DAA6D;AAC7D,kDAA4C;AAC5C,uDAAqD;AAGrD;IAAyC,uCAAU;IAI/C;QAAA,YACI,iBAAO,SAGV;QAPO,WAAK,GAAY,KAAK,CAAA;QACtB,eAAS,GAAW,CAAC,CAAA;QACrB,kBAAY,GAAW,CAAC,CAAA,CAAC,UAAU;QAGvC,KAAI,CAAC,eAAe,CAAC,mCAAgB,CAAC,YAAY,EAAE,IAAI,CAAC,CAAA,CAAC,4BAA4B;QACtF,KAAI,CAAC,SAAS,CAAC,mCAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAA;;IACpD,CAAC;IAEM,mCAAK,GAAZ;QACI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;QAClB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAA;IACtB,CAAC;IAEM,oCAAM,GAAb;QACI,OAAO,IAAI,CAAC,KAAK,CAAA;IACrB,CAAC;IAEM,6CAAe,GAAtB;QACI,OAAO,IAAI,CAAA;IACf,CAAC;IACM,yDAA2B,GAAlC,UAAmC,EAAW;QAC1C,IAAI,CAAC,MAAM,GAAG,yBAAW,CAAC,WAAW,CAAA;QACrC,OAAO,IAAI,CAAC,MAAM,IAAI,IAAI,CAAA;QAC1B,iDAAiD;QACjD,sDAAsD;QACtD,qCAAqC;QACrC,+BAA+B;QAE/B,4BAA4B;QAC5B,0BAA0B;QAC1B,uCAAuC;QACvC,oBAAoB;QACpB,8CAA8C;QAC9C,YAAY;QACZ,yCAAyC;QACzC,mDAAmD;QACnD,8BAA8B;QAC9B,sCAAsC;QACtC,qBAAqB;QACrB,yBAAyB;QACzB,MAAM;QACN,KAAK;QACL,IAAI;QACJ,uBAAuB;QACvB,iBAAiB;QAEjB,yBAAyB;QAEzB,0BAA0B;IAC9B,CAAC;IAEM,qCAAO,GAAd,UAAe,IAAa;QACxB,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC;YAAE,IAAI,CAAC,SAAS,GAAG,kBAAQ,CAAC,OAAO,EAAE,CAAA;QAE5D,IAAI,kBAAQ,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE;YACzD,qDAAqD;YACrD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAA;SACpB;QACD,OAAO,IAAI,CAAA;IACf,CAAC;IACL,0BAAC;AAAD,CA9DA,AA8DC,CA9DwC,uBAAU,GA8DlD;AA9DY,kDAAmB","file":"","sourceRoot":"/","sourcesContent":["import { GoapAction } from \"../src/app/ai/goap/GoapAction\"\nimport { GoapAgent } from \"../src/app/ai/goap/GoapAgent\"\nimport { IGoap } from \"../src/app/ai/goap/IGoap\"\nimport { VGameObject } from \"../src/app/base/VGameObject\"\nimport { Environment } from \"../src/app/gamedata/Environment\"\nimport TimeUtil from \"../src/utils/TimeUtil\"\nimport { ActionDataStatus } from \"./ActionDataStatus\"\nimport Entity from \"./Entity\"\n\nexport class GotoEquipmentAction extends GoapAction {\n    private bDone: boolean = false\n    private startTime: number = 0\n    private workDuration: number = 2 // seconds\n    public constructor() {\n        super()\n        this.addPrecondition(ActionDataStatus.isCanOutfire, true) // we need a tool to do this\n        this.addEffect(ActionDataStatus.isEquipOk, true)\n    }\n\n    public reset(): void {\n        this.bDone = false\n        this.startTime = 0\n    }\n\n    public isDone() {\n        return this.bDone\n    }\n\n    public requiresInRange() {\n        return true\n    }\n    public checkProceduralPrecondition(go: cc.Node): boolean {\n        this.target = Environment.equipTarget\n        return this.target != null\n        // // TODO:find the nearest tree that we can chop\n        // let trees: TreeComponent[] = Environment.treeComps;\n        // let closest: TreeComponent = null;\n        // let closestDist: number = 0;\n\n        // for (let tree of trees) {\n        // \tif (closest == null) {\n        // \t\t// first one, so choose it for now\n        // \t\tclosest = tree;\n        // \t\tclosestDist = tree.distanceSquare(agent);\n        // \t} else {\n        // \t\t// is this one closer than the last?\n        // \t\tlet dist: number = tree.distanceSquare(agent);\n        // \t\tif (dist < closestDist) {\n        // \t\t\t// we found a closer one, use it\n        // \t\t\tclosest = tree;\n        // \t\t\tclosestDist = dist;\n        // \t\t}\n        // \t}\n        // }\n        // if (closest == null)\n        // \treturn false;\n\n        // this.target = closest;\n\n        // return closest != null;\n    }\n\n    public perform(node: cc.Node): boolean {\n        if (this.startTime == 0) this.startTime = TimeUtil.getTime()\n\n        if (TimeUtil.getTime() - this.startTime > this.workDuration) {\n            //entity.memory.set(ActionDataStatus.isEquipOk, true)\n            this.bDone = true\n        }\n        return true\n    }\n}\n"]}