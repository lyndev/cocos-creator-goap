{"version":3,"sources":["assets/shopping/ActionBuyProduct.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,4DAA0D;AAC1D,iCAA+B;AAC/B,6CAAuC;AAGvC;IAA8C,oCAAU;IAGpD;QAAA,YACI,iBAAO,SAGV;QANS,WAAK,GAAY,KAAK,CAAA;QAI5B,KAAI,CAAC,eAAe,CAAC,YAAY,EAAE,KAAK,CAAC,CAAA;QACzC,KAAI,CAAC,SAAS,CAAC,YAAY,EAAE,IAAI,CAAC,CAAA;;IACtC,CAAC;IAED,gCAAK,GAAL;QACI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;IACtB,CAAC;IAED,iCAAM,GAAN;QACI,OAAO,IAAI,CAAC,KAAK,CAAA;IACrB,CAAC;IAED,sDAA2B,GAA3B,UAA4B,EAAW;QACnC,IAAI,qBAAW,CAAC,UAAU,EAAE;YACxB,IAAI,CAAC,MAAM,GAAG,qBAAW,CAAC,UAAU,CAAA;YACpC,OAAO,IAAI,CAAA;SACd;QACD,OAAO,KAAK,CAAA;IAChB,CAAC;IAED,kCAAO,GAAP,UAAQ,IAAa;QACjB,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;YACpB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;YACnB,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,aAAK,CAAC,CAAA;YACpC,KAAK,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YACtB,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;gBACzB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAA;gBACjB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;aACtB;SACJ;QACD,OAAO,IAAI,CAAA;IACf,CAAC;IAED,0CAAe,GAAf;QACI,OAAO,IAAI,CAAA;IACf,CAAC;IACL,uBAAC;AAAD,CAzCA,AAyCC,CAzC6C,uBAAU,GAyCvD","file":"","sourceRoot":"/","sourcesContent":["import { GoapAction } from \"../src/app/ai/goap/GoapAction\"\nimport { Buyer } from \"./Buyer\"\nimport ContextShop from \"./ContextShop\"\nimport GoodsShelf from \"./GoodsShelf\"\n\nexport default class ActionBuyProduct extends GoapAction {\n    protected bDone: boolean = false\n    public target: GoodsShelf\n    constructor() {\n        super()\n        this.addPrecondition(\"hasProduct\", false)\n        this.addEffect(\"hasProduct\", true)\n    }\n\n    reset(): void {\n        this.bDone = false\n    }\n\n    isDone(): boolean {\n        return this.bDone\n    }\n\n    checkProceduralPrecondition(go: cc.Node): boolean {\n        if (ContextShop.goodsShelf) {\n            this.target = ContextShop.goodsShelf\n            return true\n        }\n        return false\n    }\n\n    perform(node: cc.Node): boolean {\n        if (this.target.has(1)) {\n            this.target.cost(1)\n            let buyer = node.getComponent(Buyer)\n            buyer.addProduct(1, 1)\n            if (buyer.hasProductFull(1)) {\n                this.bDone = true\n                console.log(\"购物完成\")\n            }\n        }\n        return true\n    }\n\n    requiresInRange(): boolean {\n        return true\n    }\n}\n"]}