{"version":3,"sources":["assets/src/app/gamedata/actions/PickUpToolAction.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,2DAAyD;AACzD,uDAAqD;AACrD,sDAAoD;AACpD,8CAA4C;AAC5C,kDAAgD;AAGhD;IAAsC,oCAAU;IAG5C;QAAA,YACI,iBAAO,SAGV;QANO,aAAO,GAAY,KAAK,CAAA;QAI5B,KAAI,CAAC,eAAe,CAAC,2BAAY,CAAC,OAAO,EAAE,KAAK,CAAC,CAAA,CAAC,0CAA0C;QAC5F,KAAI,CAAC,SAAS,CAAC,2BAAY,CAAC,OAAO,EAAE,IAAI,CAAC,CAAA,CAAC,qBAAqB;;IACpE,CAAC;IAEM,gCAAK,GAAZ;QACI,IAAI,CAAC,OAAO,GAAG,KAAK,CAAA;IACxB,CAAC;IAEM,iCAAM,GAAb;QACI,OAAO,IAAI,CAAC,OAAO,CAAA;IACvB,CAAC;IAEM,0CAAe,GAAtB;QACI,OAAO,IAAI,CAAA;IACf,CAAC;IAEM,sDAA2B,GAAlC,UAAmC,KAAc;QAC7C,yDAAyD;QACzD,IAAI,WAAW,GAA0B,yBAAW,CAAC,eAAe,CAAA;QACpE,IAAI,OAAO,GAAwB,IAAI,CAAA;QACvC,IAAI,WAAW,GAAW,CAAC,CAAA;QAC3B,IAAI,EAAE,GAAG,KAAK,CAAC,YAAY,CAAC,yBAAW,CAAC,CAAA;QACxC,KAAmB,UAAW,EAAX,2BAAW,EAAX,yBAAW,EAAX,IAAW,EAAE;YAA3B,IAAI,MAAM,oBAAA;YACX,IAAI,MAAM,CAAC,QAAQ,GAAG,CAAC,EAAE;gBACrB,IAAI,OAAO,IAAI,IAAI,EAAE;oBACjB,kCAAkC;oBAClC,OAAO,GAAG,MAAM,CAAA;oBAChB,WAAW,GAAG,MAAM,CAAC,cAAc,CAAC,EAAE,CAAC,CAAA;iBAC1C;qBAAM;oBACH,oCAAoC;oBACpC,IAAI,IAAI,GAAW,MAAM,CAAC,cAAc,CAAC,EAAE,CAAC,CAAA;oBAC5C,IAAI,IAAI,GAAG,WAAW,EAAE;wBACpB,gCAAgC;wBAChC,OAAO,GAAG,MAAM,CAAA;wBAChB,WAAW,GAAG,IAAI,CAAA;qBACrB;iBACJ;aACJ;SACJ;QACD,IAAI,OAAO,IAAI,IAAI;YAAE,OAAO,KAAK,CAAA;QAEjC,IAAI,CAAC,MAAM,GAAG,OAAO,CAAA;QAErB,OAAO,OAAO,IAAI,IAAI,CAAA;IAC1B,CAAC;IAEM,kCAAO,GAAd,UAAe,IAAa;QACxB,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,CAAC,EAAE;YAC1B,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,CAAC,CAAA;YACzB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAA;YACnB,IAAI,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,mBAAQ,CAAC,CAAA;YAC1C,0CAA0C;YAC1C,QAAQ,CAAC,UAAU,EAAE,CAAA;YACrB,OAAO,IAAI,CAAA;SACd;aAAM;YACH,+FAA+F;YAC/F,OAAO,KAAK,CAAA;SACf;IACL,CAAC;IACL,uBAAC;AAAD,CAhEA,AAgEC,CAhEqC,uBAAU,GAgE/C;AAhEY,4CAAgB","file":"","sourceRoot":"/","sourcesContent":["import { ActionStatus } from \"../../ai/goap/ActionStatus\"\nimport { GoapAction } from \"../../ai/goap/GoapAction\"\nimport { VGameObject } from \"../../base/VGameObject\"\nimport { Environment } from \"../Environment\"\nimport { Labourer } from \"../labourers/Labourer\"\nimport { SupplyPileComponent } from \"../SupplyPileComponent\"\n\nexport class PickUpToolAction extends GoapAction {\n    private hasTool: boolean = false\n    public target: SupplyPileComponent // where we get the tool from\n    public constructor() {\n        super()\n        this.addPrecondition(ActionStatus.HasTool, false) // don't get a tool if we already have one\n        this.addEffect(ActionStatus.HasTool, true) // we now have a tool\n    }\n\n    public reset(): void {\n        this.hasTool = false\n    }\n\n    public isDone(): boolean {\n        return this.hasTool\n    }\n\n    public requiresInRange(): boolean {\n        return true\n    }\n\n    public checkProceduralPrecondition(agent: cc.Node): boolean {\n        //TODO: find the nearest supply pile that has spare tools\n        let supplyPiles: SupplyPileComponent[] = Environment.supplyPileComps\n        let closest: SupplyPileComponent = null\n        let closestDist: number = 0\n        let vg = agent.getComponent(VGameObject)\n        for (let supply of supplyPiles) {\n            if (supply.numTools > 0) {\n                if (closest == null) {\n                    // first one, so choose it for now\n                    closest = supply\n                    closestDist = supply.distanceSquare(vg)\n                } else {\n                    // is this one closer than the last?\n                    let dist: number = supply.distanceSquare(vg)\n                    if (dist < closestDist) {\n                        // we found a closer one, use it\n                        closest = supply\n                        closestDist = dist\n                    }\n                }\n            }\n        }\n        if (closest == null) return false\n\n        this.target = closest\n\n        return closest != null\n    }\n\n    public perform(node: cc.Node): boolean {\n        if (this.target.numTools > 0) {\n            this.target.numTools -= 1\n            this.hasTool = true\n            let labourer = node.getComponent(Labourer)\n            // create the tool and add it to the agent\n            labourer.pickUpTool()\n            return true\n        } else {\n            // we got there but there was no tool available! Someone got there first. Cannot perform action\n            return false\n        }\n    }\n}\n"]}