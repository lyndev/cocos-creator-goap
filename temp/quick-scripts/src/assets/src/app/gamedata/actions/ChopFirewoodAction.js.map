{"version":3,"sources":["assets/src/app/gamedata/actions/ChopFirewoodAction.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,oDAA8C;AAC9C,2DAAyD;AACzD,uDAAqD;AACrD,sDAAoD;AAGpD,8CAA4C;AAC5C,kDAAgD;AAEhD;IAAwC,sCAAU;IAK9C;QAAA,YACI,iBAAO,SAIV;QATO,aAAO,GAAY,KAAK,CAAA;QAExB,eAAS,GAAW,CAAC,CAAA;QACtB,kBAAY,GAAW,CAAC,CAAA;QAG3B,KAAI,CAAC,eAAe,CAAC,2BAAY,CAAC,OAAO,EAAE,IAAI,CAAC,CAAA,CAAC,4BAA4B;QAC7E,KAAI,CAAC,eAAe,CAAC,2BAAY,CAAC,WAAW,EAAE,KAAK,CAAC,CAAA,CAAC,yCAAyC;QAC/F,KAAI,CAAC,SAAS,CAAC,2BAAY,CAAC,WAAW,EAAE,IAAI,CAAC,CAAA;;IAClD,CAAC;IACM,kCAAK,GAAZ;QACI,IAAI,CAAC,OAAO,GAAG,KAAK,CAAA;QACpB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAA;IACtB,CAAC;IACM,mCAAM,GAAb;QACI,OAAO,IAAI,CAAC,OAAO,CAAA;IACvB,CAAC;IAEM,4CAAe,GAAtB;QACI,OAAO,IAAI,CAAA;IACf,CAAC;IAEM,wDAA2B,GAAlC,UAAmC,EAAW;QAC1C,+DAA+D;QAC/D,IAAI,MAAM,GAA6B,yBAAW,CAAC,kBAAkB,CAAA;QACrE,IAAI,OAAO,GAA2B,IAAI,CAAA;QAC1C,IAAI,WAAW,GAAW,CAAC,CAAA;QAC3B,IAAI,EAAE,GAAG,EAAE,CAAC,YAAY,CAAC,yBAAW,CAAC,CAAA;QACrC,KAAkB,UAAM,EAAN,iBAAM,EAAN,oBAAM,EAAN,IAAM,EAAE;YAArB,IAAI,KAAK,eAAA;YACV,IAAI,OAAO,IAAI,IAAI,EAAE;gBACjB,OAAO,GAAG,KAAK,CAAA;gBACf,WAAW,GAAG,KAAK,CAAC,cAAc,CAAC,EAAE,CAAC,CAAA;aACzC;iBAAM;gBACH,oCAAoC;gBACpC,IAAI,IAAI,GAAW,KAAK,CAAC,cAAc,CAAC,EAAE,CAAC,CAAA;gBAC3C,IAAI,IAAI,GAAG,WAAW,EAAE;oBACpB,gCAAgC;oBAChC,OAAO,GAAG,KAAK,CAAA;oBACf,WAAW,GAAG,IAAI,CAAA;iBACrB;aACJ;SACJ;QAED,IAAI,OAAO,IAAI,IAAI;YAAE,OAAO,KAAK,CAAA;QAEjC,IAAI,CAAC,MAAM,GAAG,OAAO,CAAA;QAErB,OAAO,OAAO,IAAI,IAAI,CAAA;IAC1B,CAAC;IAEM,oCAAO,GAAd,UAAe,IAAa;QACxB,IAAI,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,mBAAQ,CAAC,CAAA;QAC1C,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC;YAAE,IAAI,CAAC,SAAS,GAAG,kBAAQ,CAAC,OAAO,EAAE,CAAA;QAC5D,IAAI,kBAAQ,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE;YACzD,oBAAoB;YACpB,IAAI,QAAQ,GAAsB,QAAQ,CAAC,QAAQ,CAAA;YACnD,QAAQ,CAAC,WAAW,IAAI,CAAC,CAAA;YACzB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAA;YACnB,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAA;YACxB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;YACd,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;gBAClB,kCAAkC;gBAClC,QAAQ,CAAC,WAAW,EAAE,CAAA;aACzB;SACJ;QACD,OAAO,IAAI,CAAA;IACf,CAAC;IACL,yBAAC;AAAD,CApEA,AAoEC,CApEuC,uBAAU,GAoEjD;AApEY,gDAAkB","file":"","sourceRoot":"/","sourcesContent":["import TimeUtil from \"../../../utils/TimeUtil\"\nimport { ActionStatus } from \"../../ai/goap/ActionStatus\"\nimport { GoapAction } from \"../../ai/goap/GoapAction\"\nimport { VGameObject } from \"../../base/VGameObject\"\nimport { BackPackComponent } from \"../BackPackComponent\"\nimport { ChoppingBlockComponent } from \"../ChoppingBlockComponent\"\nimport { Environment } from \"../Environment\"\nimport { Labourer } from \"../labourers/Labourer\"\n\nexport class ChopFirewoodAction extends GoapAction {\n    private chopped: boolean = false\n\n    private startTime: number = 0\n    public workDuration: number = 2\n    public constructor() {\n        super()\n        this.addPrecondition(ActionStatus.HasTool, true) // we need a tool to do this\n        this.addPrecondition(ActionStatus.HasFirewood, false) // if we have firewood we don't want more\n        this.addEffect(ActionStatus.HasFirewood, true)\n    }\n    public reset() {\n        this.chopped = false\n        this.startTime = 0\n    }\n    public isDone() {\n        return this.chopped\n    }\n\n    public requiresInRange() {\n        return true\n    }\n\n    public checkProceduralPrecondition(go: cc.Node): boolean {\n        // find the nearest chopping block that we can chop our wood at\n        let blocks: ChoppingBlockComponent[] = Environment.choppingBlockComps\n        let closest: ChoppingBlockComponent = null\n        let closestDist: number = 0\n        let vg = go.getComponent(VGameObject)\n        for (let block of blocks) {\n            if (closest == null) {\n                closest = block\n                closestDist = block.distanceSquare(vg)\n            } else {\n                // is this one closer than the last?\n                let dist: number = block.distanceSquare(vg)\n                if (dist < closestDist) {\n                    // we found a closer one, use it\n                    closest = block\n                    closestDist = dist\n                }\n            }\n        }\n\n        if (closest == null) return false\n\n        this.target = closest\n\n        return closest != null\n    }\n\n    public perform(node: cc.Node): boolean {\n        let labourer = node.getComponent(Labourer)\n        if (this.startTime == 0) this.startTime = TimeUtil.getTime()\n        if (TimeUtil.getTime() - this.startTime > this.workDuration) {\n            // finished chopping\n            let backpack: BackPackComponent = labourer.backpack\n            backpack.numFirewood += 5\n            this.chopped = true\n            let tool = labourer.tool\n            tool.use(0.34)\n            if (tool.destroyed()) {\n                // TODO:删除 Destroy(backpack.tool);\n                labourer.destroyTool()\n            }\n        }\n        return true\n    }\n}\n"]}