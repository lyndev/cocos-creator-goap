{"version":3,"sources":["assets/src/app/gamedata/actions/MineOreAction.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,oDAA8C;AAC9C,2DAAyD;AACzD,uDAAqD;AACrD,sDAAoD;AAEpD,8CAA4C;AAE5C,kDAAgD;AAGhD;IAAmC,iCAAU;IAMzC;QAAA,YACI,iBAAO,SAIV;QAVO,WAAK,GAAY,KAAK,CAAA;QAEtB,eAAS,GAAW,CAAC,CAAA;QACrB,oBAAc,GAAW,CAAC,CAAA,CAAC,WAAW;QAI1C,KAAI,CAAC,eAAe,CAAC,2BAAY,CAAC,OAAO,EAAE,IAAI,CAAC,CAAA,CAAC,4BAA4B;QAC7E,KAAI,CAAC,eAAe,CAAC,2BAAY,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA,CAAC,oCAAoC;QACrF,KAAI,CAAC,SAAS,CAAC,2BAAY,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;;IAC7C,CAAC;IAEM,6BAAK,GAAZ;QACI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;QAClB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAA;IACtB,CAAC;IAEM,8BAAM,GAAb;QACI,OAAO,IAAI,CAAC,KAAK,CAAA;IACrB,CAAC;IAEM,uCAAe,GAAtB;QACI,OAAO,IAAI,CAAA,CAAC,gCAAgC;IAChD,CAAC;IAEM,mDAA2B,GAAlC,UAAmC,KAAc;QAC7C,8CAA8C;QAC9C,IAAI,KAAK,GAAwB,yBAAW,CAAC,SAAS,CAAA;QACtD,IAAI,OAAO,GAAsB,IAAI,CAAA;QACrC,IAAI,WAAW,GAAW,CAAC,CAAA;QAC3B,IAAI,EAAE,GAAG,KAAK,CAAC,YAAY,CAAC,yBAAW,CAAC,CAAA;QACxC,KAAiB,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK,EAAE;YAAnB,IAAI,IAAI,cAAA;YACT,IAAI,OAAO,IAAI,IAAI,EAAE;gBACjB,kCAAkC;gBAClC,OAAO,GAAG,IAAI,CAAA;gBACd,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAA;aACxC;iBAAM;gBACH,oCAAoC;gBACpC,IAAI,IAAI,GAAW,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAA;gBAC1C,IAAI,IAAI,GAAG,WAAW,EAAE;oBACpB,gCAAgC;oBAChC,OAAO,GAAG,IAAI,CAAA;oBACd,WAAW,GAAG,IAAI,CAAA;iBACrB;aACJ;SACJ;QACD,IAAI,CAAC,MAAM,GAAG,OAAO,CAAA;QAErB,OAAO,OAAO,IAAI,IAAI,CAAA;IAC1B,CAAC;IAEM,+BAAO,GAAd,UAAe,IAAa;QACxB,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC;YAAE,IAAI,CAAC,SAAS,GAAG,kBAAQ,CAAC,OAAO,EAAE,CAAA;QAC5D,IAAI,kBAAQ,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,EAAE;YAC3D,kBAAkB;YAClB,IAAI,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,mBAAQ,CAAC,CAAA;YAC1C,IAAI,QAAQ,GAAsB,QAAQ,CAAC,QAAQ,CAAA;YACnD,QAAQ,CAAC,MAAM,IAAI,CAAC,CAAA;YACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAA;YACjB,IAAI,IAAI,GAAkB,QAAQ,CAAC,IAAI,CAAA;YACvC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;YACb,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;gBAClB,iCAAiC;gBACjC,QAAQ,CAAC,WAAW,EAAE,CAAA;aACzB;SACJ;QACD,OAAO,IAAI,CAAA;IACf,CAAC;IACL,oBAAC;AAAD,CArEA,AAqEC,CArEkC,uBAAU,GAqE5C;AArEY,sCAAa","file":"","sourceRoot":"/","sourcesContent":["import TimeUtil from \"../../../utils/TimeUtil\"\nimport { ActionStatus } from \"../../ai/goap/ActionStatus\"\nimport { GoapAction } from \"../../ai/goap/GoapAction\"\nimport { VGameObject } from \"../../base/VGameObject\"\nimport { BackPackComponent } from \"../BackPackComponent\"\nimport { Environment } from \"../Environment\"\nimport { IronRockComponent } from \"../IronRockComponent\"\nimport { Labourer } from \"../labourers/Labourer\"\nimport { ToolComponent } from \"../ToolComponent\"\n\nexport class MineOreAction extends GoapAction {\n    private mined: boolean = false\n\n    private startTime: number = 0\n    private miningDuration: number = 2 // seconds;\n\n    public constructor() {\n        super()\n        this.addPrecondition(ActionStatus.HasTool, true) // we need a tool to do this\n        this.addPrecondition(ActionStatus.HasOre, false) // if we have ore we don't want more\n        this.addEffect(ActionStatus.HasOre, true)\n    }\n\n    public reset(): void {\n        this.mined = false\n        this.startTime = 0\n    }\n\n    public isDone(): boolean {\n        return this.mined\n    }\n\n    public requiresInRange(): boolean {\n        return true // yes we need to be near a rock\n    }\n\n    public checkProceduralPrecondition(agent: cc.Node): boolean {\n        //TODO: find the nearest rock that we can mine\n        let rocks: IronRockComponent[] = Environment.rockComps\n        let closest: IronRockComponent = null\n        let closestDist: number = 0\n        let vg = agent.getComponent(VGameObject)\n        for (let rock of rocks) {\n            if (closest == null) {\n                // first one, so choose it for now\n                closest = rock\n                closestDist = rock.distanceSquare(vg)\n            } else {\n                // is this one closer than the last?\n                let dist: number = rock.distanceSquare(vg)\n                if (dist < closestDist) {\n                    // we found a closer one, use it\n                    closest = rock\n                    closestDist = dist\n                }\n            }\n        }\n        this.target = closest\n\n        return closest != null\n    }\n\n    public perform(node: cc.Node): boolean {\n        if (this.startTime == 0) this.startTime = TimeUtil.getTime()\n        if (TimeUtil.getTime() - this.startTime > this.miningDuration) {\n            // finished mining\n            let labourer = node.getComponent(Labourer)\n            let backpack: BackPackComponent = labourer.backpack\n            backpack.numOre += 2\n            this.mined = true\n            let tool: ToolComponent = labourer.tool\n            tool.use(0.5)\n            if (tool.destroyed()) {\n                //TODO:删除 Destroy(backpack.tool);\n                labourer.destroyTool()\n            }\n        }\n        return true\n    }\n}\n"]}