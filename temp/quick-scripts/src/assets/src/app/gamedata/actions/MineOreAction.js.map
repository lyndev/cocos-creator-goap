{"version":3,"sources":["assets/src/app/gamedata/actions/MineOreAction.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,oDAA+C;AAC/C,2DAA0D;AAC1D,uDAAsD;AAGtD,8CAA6C;AAK7C;;;;;;GAMG;AACH;IAAmC,iCAAU;IAM5C;QAAA,YACC,iBAAO,SAIP;QAVO,WAAK,GAAY,KAAK,CAAC;QAEvB,eAAS,GAAW,CAAC,CAAC;QACtB,oBAAc,GAAW,CAAC,CAAC,CAAC,WAAW;QAI9C,KAAI,CAAC,eAAe,CAAC,2BAAY,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,4BAA4B;QAC9E,KAAI,CAAC,eAAe,CAAC,2BAAY,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,oCAAoC;QACtF,KAAI,CAAC,SAAS,CAAC,2BAAY,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;;IAC3C,CAAC;IAEM,6BAAK,GAAZ;QACC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IACpB,CAAC;IAEM,8BAAM,GAAb;QACC,OAAO,IAAI,CAAC,KAAK,CAAC;IACnB,CAAC;IAEM,uCAAe,GAAtB;QACC,OAAO,IAAI,CAAC,CAAC,gCAAgC;IAC9C,CAAC;IAEM,mDAA2B,GAAlC,UAAmC,KAAkB;QACpD,8CAA8C;QAC9C,IAAI,KAAK,GAAwB,yBAAW,CAAC,SAAS,CAAC;QACvD,IAAI,OAAO,GAAsB,IAAI,CAAC;QACtC,IAAI,WAAW,GAAW,CAAC,CAAC;QAE5B,KAAiB,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK,EAAE;YAAnB,IAAI,IAAI,cAAA;YACZ,IAAI,OAAO,IAAI,IAAI,EAAE;gBACpB,kCAAkC;gBAClC,OAAO,GAAG,IAAI,CAAC;gBACf,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;aACzC;iBAAM;gBACN,oCAAoC;gBACpC,IAAI,IAAI,GAAW,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;gBAC9C,IAAI,IAAI,GAAG,WAAW,EAAE;oBACvB,gCAAgC;oBAChC,OAAO,GAAG,IAAI,CAAC;oBACf,WAAW,GAAG,IAAI,CAAC;iBACnB;aACD;SACD;QACD,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC;QAEtB,OAAO,OAAO,IAAI,IAAI,CAAC;IACxB,CAAC;IAEM,+BAAO,GAAd,UAAe,QAAkB;QAChC,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC;YACtB,IAAI,CAAC,SAAS,GAAG,kBAAQ,CAAC,OAAO,EAAE,CAAC;QAErC,IAAI,kBAAQ,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,EAAE;YAC9D,kBAAkB;YAClB,IAAI,QAAQ,GAAsB,QAAQ,CAAC,QAAQ,CAAC;YAAA,CAAC;YACrD,QAAQ,CAAC,MAAM,IAAI,CAAC,CAAC;YACrB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,IAAI,GAAkB,QAAQ,CAAC,IAAI,CAAC;YACxC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACd,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;gBACrB,iCAAiC;gBACjC,QAAQ,CAAC,WAAW,EAAE,CAAC;aACvB;SACD;QACD,OAAO,IAAI,CAAC;IACb,CAAC;IACF,oBAAC;AAAD,CAtEA,AAsEC,CAtEkC,uBAAU,GAsE5C;AAtEY,sCAAa","file":"","sourceRoot":"/","sourcesContent":["import TimeUtil from \"../../../utils/TimeUtil\";\nimport { ActionStatus } from \"../../ai/goap/ActionStatus\";\nimport { GoapAction } from \"../../ai/goap/GoapAction\";\nimport { VGameObject } from \"../../base/VGameObject\";\nimport { BackPackComponent } from \"../BackPackComponent\";\nimport { Environment } from \"../Environment\";\nimport { IronRockComponent } from \"../IronRockComponent\";\nimport { Labourer } from \"../labourers/Labourer\";\nimport { ToolComponent } from \"../ToolComponent\";\n\n/*\n * @Description: \n * @Author: RannarYang \n * @Date: 2018-09-06 00:13:23 \n * @Last Modified by: RannarYang\n * @Last Modified time: 2018-10-28 11:36:36\n */\nexport class MineOreAction extends GoapAction {\n\tprivate mined: boolean = false;\n\n\tprivate startTime: number = 0;\n\tprivate miningDuration: number = 2; // seconds;\n\n\tpublic constructor() {\n\t\tsuper();\n\t\tthis.addPrecondition(ActionStatus.HasTool, true); // we need a tool to do this\n\t\tthis.addPrecondition(ActionStatus.HasOre, false); // if we have ore we don't want more\n\t\tthis.addEffect(ActionStatus.HasOre, true);\n\t}\n\n\tpublic reset(): void {\n\t\tthis.mined = false;\n\t\tthis.startTime = 0;\n\t}\n\n\tpublic isDone(): boolean {\n\t\treturn this.mined;\n\t}\n\n\tpublic requiresInRange(): boolean {\n\t\treturn true; // yes we need to be near a rock\n\t}\n\n\tpublic checkProceduralPrecondition(agent: VGameObject): boolean {\n\t\t//TODO: find the nearest rock that we can mine\n\t\tlet rocks: IronRockComponent[] = Environment.rockComps;\n\t\tlet closest: IronRockComponent = null;\n\t\tlet closestDist: number = 0;\n\n\t\tfor (let rock of rocks) {\n\t\t\tif (closest == null) {\n\t\t\t\t// first one, so choose it for now\n\t\t\t\tclosest = rock;\n\t\t\t\tclosestDist = rock.distanceSquare(agent);\n\t\t\t} else {\n\t\t\t\t// is this one closer than the last?\n\t\t\t\tlet dist: number = rock.distanceSquare(agent);\n\t\t\t\tif (dist < closestDist) {\n\t\t\t\t\t// we found a closer one, use it\n\t\t\t\t\tclosest = rock;\n\t\t\t\t\tclosestDist = dist;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.target = closest;\n\n\t\treturn closest != null;\n\t}\n\n\tpublic perform(labourer: Labourer): boolean {\n\t\tif (this.startTime == 0)\n\t\t\tthis.startTime = TimeUtil.getTime();\n\n\t\tif (TimeUtil.getTime() - this.startTime > this.miningDuration) {\n\t\t\t// finished mining\n\t\t\tlet backpack: BackPackComponent = labourer.backpack;;\n\t\t\tbackpack.numOre += 2;\n\t\t\tthis.mined = true;\n\t\t\tlet tool: ToolComponent = labourer.tool;\n\t\t\ttool.use(0.5);\n\t\t\tif (tool.destroyed()) {\n\t\t\t\t//TODO:删除 Destroy(backpack.tool);\n\t\t\t\tlabourer.destroyTool();\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}"]}