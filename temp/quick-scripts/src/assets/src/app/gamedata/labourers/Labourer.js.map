{"version":3,"sources":["assets/src/app/gamedata/labourers/Labourer.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["/*\n * @Description: {} \n * @Author: Rannar.Yang \n * @Date: 2018-09-05 20:52:30 \n * @Last Modified by: RannarYang\n * @Last Modified time: 2018-11-04 18:31:49\n */\n\nimport { ActionStatus } from \"../../ai/goap/ActionStatus\";\nimport { GoapAction } from \"../../ai/goap/GoapAction\";\nimport { GoapAgent } from \"../../ai/goap/GoapAgent\";\nimport { IGoap } from \"../../ai/goap/IGoap\";\nimport { VGameObject } from \"../../base/VGameObject\";\nimport { GameDataManager } from \"../../data/GameDataManager\";\nimport { LabourerType } from \"../../data/LabourerType\";\nimport { ToolType } from \"../../data/ToolType\";\nimport { T_LabourerBean } from \"../../data/T_LabourerContainer\";\nimport { BackPackComponent } from \"../BackPackComponent\";\nimport { ToolComponent } from \"../ToolComponent\";\n\n/**\n * A general labourer export class.\n * You should subexport class this for specific Labourer export classes and implement\n * the createGoalState() method that will populate the goal for the GOAP\n * planner.\n */\nconst { ccclass, property } = cc._decorator;\n@ccclass\nexport class Labourer extends VGameObject implements IGoap {\n\t@property({ type: cc.Enum(LabourerType), displayName: \"type\" })\n\tpublic labourerType: LabourerType = LabourerType.None;\n\n\t/**goap agent */\n\tprotected goapAgent: GoapAgent;\n\t/**拥有的actions */\n\tprivate avaliableActions: GoapAction[] = [];\n\tpublic getAvaliableActions(): GoapAction[] {\n\t\treturn this.avaliableActions;\n\t}\n\tprotected toInitAvaliableActions(actionCls: any[]) {\n\t\tlet action;\n\t\tfor (let i = 0, len = actionCls.length; i < len; i++) {\n\t\t\taction = new actionCls[i]();\n\t\t\tthis.avaliableActions.push(action);\n\t\t}\n\t}\n\t/**背包 */\n\tpublic backpack: BackPackComponent;\n\n\tpublic bean: T_LabourerBean;\n\n\tpublic tool: ToolComponent;\n\n\tbMoving = false\n\tbMoveEnd = false\n\tpublic onLoad() {\n\t\t//super.childrenCreated();\n\t\tthis.bean = GameDataManager.I.t_labourderContainer.getLabourerByType(this.labourerType)\n\t\tif (!this.tool) {\n\t\t\tthis.pickUpTool();\n\t\t}\n\t\tthis.initAvaliableActions();\n\t\tthis.goapAgent = new GoapAgent(this);\n\t}\n\tprotected initAvaliableActions() { }\n\n\tpublic update(delta: number) {\n\t\tthis.goapAgent.update(delta);\n\t}\n\n\tpublic getWorldState(): Map<string, Object> {\n\t\tlet worldData: Map<string, Object> = new Map<string, Object>();\n\t\tworldData.set(ActionStatus.HasOre, this.backpack.hasOre());\n\t\tworldData.set(ActionStatus.HasLogs, this.backpack.hasLog());\n\t\tworldData.set(ActionStatus.HasFirewood, this.backpack.hasFirewood());\n\t\tworldData.set(ActionStatus.HasTool, this.hasTool());\n\t\treturn worldData;\n\t}\n\n\tprivate hasTool() {\n\t\treturn this.tool != null;\n\t}\n\n\t/**\n\t * Implement in subexport classes\n\t */\n\tpublic createGoalState(): Map<string, Object> {\n\t\treturn new Map()\n\t};\n\n\tpublic planFailed(failedGoad: Map<string, Object>) {\n\t\t// Not handling this here since we are making sure our goals will always succeed.\n\t\t// But normally you want to make sure the world state has changed before running\n\t\t// the same goal again, or else it will just fail.\n\t}\n\n\tpublic planFound(goal: Map<string, Object>, actions: GoapAction[]) {\n\t\t// Yay we found a plan for our goal\n\t\tconsole.log(\"Plan found: \", GoapAgent.prettyPrintActionsQueue(actions));\n\t}\n\n\tpublic actionsFinished(): void {\n\t\t// Everything is done, we completed our actions for this gool. Hooray!\n\t\tconsole.log(\"Actions completed\");\n\t}\n\n\tpublic planAborted(aborter: GoapAction) {\n\t\t// An action bailed out of the plan. State has been reset to plan again.\n\t\t// Take note of what happened and make sure if you run the same goal again\n\t\t// that it can succeed.\n\t\tconsole.log(\"Plan Aborted: \" + GoapAgent.prettyPrintAction(aborter));\n\t}\n\n\tpublic moveAgent(nextAction: GoapAction, delta: number) {\n\t\tlet target = nextAction.target;\n\t\tif (this.bMoveEnd) {\n\t\t\tthis.bMoveEnd = false\n\t\t\treturn true\n\t\t}\n\t\tif (!this.bMoving) {\n\t\t\tthis.bMoving = true\n\t\t\tlet actions = []\n\t\t\tactions.push(cc.moveTo(2, new cc.Vec2(target.node.x, target.node.y)))\n\t\t\tactions.push(cc.callFunc(() => {\n\t\t\t\tthis.bMoveEnd = true\n\t\t\t\tthis.bMoving = false\n\t\t\t}))\n\t\t\tthis.node.stopAllActions()\n\t\t\tthis.node.runAction(cc.sequence(actions))\n\t\t}\n\n\t\treturn this.bMoveEnd\n\t\t// let step = this.bean.speed * delta;\n\t\t// let target = nextAction.target;\n\t\t// // 设置新的position\n\t\t// this.moveTo(target, step);\n\t\t// if (this.posEquip(target)) {\n\t\t// \tnextAction.setInRange(true);\n\t\t// \treturn true;\n\t\t// } else {\n\t\t// \treturn false;\n\t\t// }\n\t}\n\t/**设置背包里的物品 */\n\tpublic setBackPack(backpack: BackPackComponent) {\n\t\tthis.backpack = backpack;\n\t\tbackpack.setOwner(this);\n\t}\n\t/**拾取工具 */\n\tpublic pickUpTool() {\n\t\tlet tool = this.tool = new ToolComponent();\n\t\t// tool.node.x = 18;\n\t\t// tool.node.y = 35;\n\t\t//\ttool.node.getComponent(cc.Sprite).spriteFrame = ToolType.getSource(this.bean.toolType);\n\t\t// this.addChild(tool);\n\t}\n\t/**销毁工具 */\n\tpublic destroyTool() {\n\t\t//this.removeChild(this.tool);\n\t\tthis.tool = undefined;\n\t}\n\n\tpublic updateBackPack() {\n\n\t}\n}"]}