{"version":3,"sources":["assets/src/app/gamedata/labourers/Labourer.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { ActionStatus } from \"../../ai/goap/ActionStatus\"\nimport { GoapAction } from \"../../ai/goap/GoapAction\"\nimport { GoapAgent } from \"../../ai/goap/GoapAgent\"\nimport { IGoap } from \"../../ai/goap/IGoap\"\nimport { GameDataManager } from \"../../data/GameDataManager\"\nimport { LabourerType } from \"../../data/LabourerType\"\nimport { T_LabourerBean } from \"../../data/T_LabourerContainer\"\nimport { BackPackComponent } from \"../BackPackComponent\"\nimport { ToolComponent } from \"../ToolComponent\"\n\nconst {requireComponent, ccclass, property } = cc._decorator\n\n@ccclass\n@requireComponent(GoapAgent)\nexport class Labourer extends cc.Component implements IGoap {\n    @property({ type: cc.Enum(LabourerType), displayName: \"type\" })\n    public labourerType: LabourerType = LabourerType.None\n\n    /**goap agent */\n    protected goapAgent: GoapAgent\n    /**拥有的actions */\n    private avaliableActions: GoapAction[] = []\n    public getAvaliableActions(): GoapAction[] {\n        return this.avaliableActions\n    }\n    protected toInitAvaliableActions(actionCls: any[]) {\n        let action\n        for (let i = 0, len = actionCls.length; i < len; i++) {\n            action = new actionCls[i]()\n            this.avaliableActions.push(action)\n        }\n    }\n    /**背包 */\n    public backpack: BackPackComponent\n    public bean: T_LabourerBean\n    public tool: ToolComponent\n\n    bMoving = false\n    bMoveEnd = false\n    public onLoad() {\n        //super.childrenCreated();\n        this.bean = GameDataManager.I.t_labourderContainer.getLabourerByType(this.labourerType)\n        if (!this.tool) {\n            this.pickUpTool()\n        }\n        this.initAvaliableActions()\n        //this.goapAgent = new GoapAgent(this);\n    }\n    protected initAvaliableActions() {}\n\n    public update(delta: number) {\n        this.update(delta)\n    }\n\n    public getWorldState(): Map<string, Object> {\n        let worldData: Map<string, Object> = new Map<string, Object>()\n        worldData.set(ActionStatus.HasOre, this.backpack.hasOre())\n        worldData.set(ActionStatus.HasLogs, this.backpack.hasLog())\n        worldData.set(ActionStatus.HasFirewood, this.backpack.hasFirewood())\n        worldData.set(ActionStatus.HasTool, this.hasTool())\n        return worldData\n    }\n\n    private hasTool() {\n        return this.tool != null\n    }\n\n    /**\n     * Implement in subexport classes\n     */\n    public createGoalState(): Map<string, Object> {\n        return new Map()\n    }\n\n    public planFailed(failedGoad: Map<string, Object>) {\n        // Not handling this here since we are making sure our goals will always succeed.\n        // But normally you want to make sure the world state has changed before running\n        // the same goal again, or else it will just fail.\n    }\n\n    public planFound(goal: Map<string, Object>, actions: GoapAction[]) {\n        // Yay we found a plan for our goal\n        console.log(\"Plan found: \", GoapAgent.prettyPrintActionsQueue(actions))\n    }\n\n    public actionsFinished(): void {\n        // Everything is done, we completed our actions for this gool. Hooray!\n        console.log(\"Actions completed\")\n    }\n\n    public planAborted(aborter: GoapAction) {\n        // An action bailed out of the plan. State has been reset to plan again.\n        // Take note of what happened and make sure if you run the same goal again\n        // that it can succeed.\n        console.log(\"Plan Aborted: \" + GoapAgent.prettyPrintAction(aborter))\n    }\n\n    public moveAgent(nextAction: GoapAction, delta: number) {\n        let target = nextAction.target\n        if (this.bMoveEnd) {\n            this.bMoveEnd = false\n            return true\n        }\n        if (!this.bMoving) {\n            this.bMoving = true\n            let actions = []\n            actions.push(cc.moveTo(2, new cc.Vec2(target.node.x, target.node.y)))\n            actions.push(\n                cc.callFunc(() => {\n                    this.bMoveEnd = true\n                    this.bMoving = false\n                    nextAction.setInRange(true)\n                })\n            )\n            this.node.stopAllActions()\n            this.node.runAction(cc.sequence(actions))\n        }\n\n        return this.bMoveEnd\n        // let step = this.bean.speed * delta;\n        // let target = nextAction.target;\n        // // 设置新的position\n        // this.moveTo(target, step);\n        // if (this.posEquip(target)) {\n        // \tnextAction.setInRange(true);\n        // \treturn true;\n        // } else {\n        // \treturn false;\n        // }\n    }\n    /**设置背包里的物品 */\n    public setBackPack(backpack: BackPackComponent) {\n        this.backpack = backpack\n        backpack.setOwner(this)\n    }\n    /**拾取工具 */\n    public pickUpTool() {\n        this.tool = new ToolComponent()\n        console.log(\"拾取工具\", this.constructor.name)\n        //let tool =\n        // tool.node.x = 18;\n        // tool.node.y = 35;\n        //\ttool.node.getComponent(cc.Sprite).spriteFrame = ToolType.getSource(this.bean.toolType);\n        // this.addChild(tool);\n    }\n    /**销毁工具 */\n    public destroyTool() {\n        //this.removeChild(this.tool);\n        this.tool = undefined\n    }\n\n    public updateBackPack() {}\n}\n"]}