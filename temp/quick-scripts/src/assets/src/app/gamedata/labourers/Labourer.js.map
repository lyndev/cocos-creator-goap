{"version":3,"sources":["assets\\src\\app\\gamedata\\labourers\\Labourer.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["/*\r\n * @Description: {} \r\n * @Author: Rannar.Yang \r\n * @Date: 2018-09-05 20:52:30 \r\n * @Last Modified by: RannarYang\r\n * @Last Modified time: 2018-11-04 18:31:49\r\n */\r\n\r\nimport { ActionStatus } from \"../../ai/goap/ActionStatus\";\r\nimport { GoapAction } from \"../../ai/goap/GoapAction\";\r\nimport { GoapAgent } from \"../../ai/goap/GoapAgent\";\r\nimport { IGoap } from \"../../ai/goap/IGoap\";\r\nimport { VGameObject } from \"../../base/VGameObject\";\r\nimport { GameDataManager } from \"../../data/GameDataManager\";\r\nimport { LabourerType } from \"../../data/LabourerType\";\r\nimport { ToolType } from \"../../data/ToolType\";\r\nimport { T_LabourerBean } from \"../../data/T_LabourerContainer\";\r\nimport { BackPackComponent } from \"../BackPackComponent\";\r\nimport { ToolComponent } from \"../ToolComponent\";\r\n\r\n/**\r\n * A general labourer export class.\r\n * You should subexport class this for specific Labourer export classes and implement\r\n * the createGoalState() method that will populate the goal for the GOAP\r\n * planner.\r\n */\r\nconst { ccclass, property } = cc._decorator;\r\n@ccclass\r\nexport class Labourer extends VGameObject implements IGoap {\r\n\t@property({ type: cc.Enum(LabourerType), displayName: \"type\" })\r\n\tpublic labourerType: LabourerType = LabourerType.None;\r\n\r\n\t/**goap agent */\r\n\tprotected goapAgent: GoapAgent;\r\n\t/**拥有的actions */\r\n\tprivate avaliableActions: GoapAction[] = [];\r\n\tpublic getAvaliableActions(): GoapAction[] {\r\n\t\treturn this.avaliableActions;\r\n\t}\r\n\tprotected toInitAvaliableActions(actionCls: any[]) {\r\n\t\tlet action;\r\n\t\tfor (let i = 0, len = actionCls.length; i < len; i++) {\r\n\t\t\taction = new actionCls[i]();\r\n\t\t\tthis.avaliableActions.push(action);\r\n\t\t}\r\n\t}\r\n\t/**背包 */\r\n\tpublic backpack: BackPackComponent;\r\n\r\n\tpublic bean: T_LabourerBean;\r\n\r\n\tpublic tool: ToolComponent;\r\n\r\n\tbMoving = false\r\n\tbMoveEnd = false\r\n\tpublic onLoad() {\r\n\t\t//super.childrenCreated();\r\n\t\tthis.bean = GameDataManager.I.t_labourderContainer.getLabourerByType(this.labourerType)\r\n\t\tif (!this.tool) {\r\n\t\t\tthis.pickUpTool();\r\n\t\t}\r\n\t\tthis.initAvaliableActions();\r\n\t\tthis.goapAgent = new GoapAgent(this);\r\n\t}\r\n\tprotected initAvaliableActions() { }\r\n\r\n\tpublic update(delta: number) {\r\n\t\tthis.goapAgent.update(delta);\r\n\t}\r\n\r\n\tpublic getWorldState(): Map<string, Object> {\r\n\t\tlet worldData: Map<string, Object> = new Map<string, Object>();\r\n\t\tworldData.set(ActionStatus.HasOre, this.backpack.hasOre());\r\n\t\tworldData.set(ActionStatus.HasLogs, this.backpack.hasLog());\r\n\t\tworldData.set(ActionStatus.HasFirewood, this.backpack.hasFirewood());\r\n\t\tworldData.set(ActionStatus.HasTool, this.hasTool());\r\n\t\treturn worldData;\r\n\t}\r\n\r\n\tprivate hasTool() {\r\n\t\treturn this.tool != null;\r\n\t}\r\n\r\n\t/**\r\n\t * Implement in subexport classes\r\n\t */\r\n\tpublic createGoalState(): Map<string, Object> {\r\n\t\treturn new Map()\r\n\t};\r\n\r\n\tpublic planFailed(failedGoad: Map<string, Object>) {\r\n\t\t// Not handling this here since we are making sure our goals will always succeed.\r\n\t\t// But normally you want to make sure the world state has changed before running\r\n\t\t// the same goal again, or else it will just fail.\r\n\t}\r\n\r\n\tpublic planFound(goal: Map<string, Object>, actions: GoapAction[]) {\r\n\t\t// Yay we found a plan for our goal\r\n\t\tconsole.log(\"Plan found: \", GoapAgent.prettyPrintActionsQueue(actions));\r\n\t}\r\n\r\n\tpublic actionsFinished(): void {\r\n\t\t// Everything is done, we completed our actions for this gool. Hooray!\r\n\t\tconsole.log(\"Actions completed\");\r\n\t}\r\n\r\n\tpublic planAborted(aborter: GoapAction) {\r\n\t\t// An action bailed out of the plan. State has been reset to plan again.\r\n\t\t// Take note of what happened and make sure if you run the same goal again\r\n\t\t// that it can succeed.\r\n\t\tconsole.log(\"Plan Aborted: \" + GoapAgent.prettyPrintAction(aborter));\r\n\t}\r\n\r\n\tpublic moveAgent(nextAction: GoapAction, delta: number) {\r\n\t\tlet target = nextAction.target;\r\n\t\tif (this.bMoveEnd) {\r\n\t\t\tthis.bMoveEnd = false\r\n\t\t\treturn true\r\n\t\t}\r\n\t\tif (!this.bMoving) {\r\n\t\t\tthis.bMoving = true\r\n\t\t\tlet actions = []\r\n\t\t\tactions.push(cc.moveTo(2, new cc.Vec2(target.node.x, target.node.y)))\r\n\t\t\tactions.push(cc.callFunc(() => {\r\n\t\t\t\tthis.bMoveEnd = true\r\n\t\t\t\tthis.bMoving = false\r\n\t\t\t\tnextAction.setInRange(true);\r\n\t\t\t}))\r\n\t\t\tthis.node.stopAllActions()\r\n\t\t\tthis.node.runAction(cc.sequence(actions))\r\n\t\t}\r\n\r\n\t\treturn this.bMoveEnd\r\n\t\t// let step = this.bean.speed * delta;\r\n\t\t// let target = nextAction.target;\r\n\t\t// // 设置新的position\r\n\t\t// this.moveTo(target, step);\r\n\t\t// if (this.posEquip(target)) {\r\n\t\t// \tnextAction.setInRange(true);\r\n\t\t// \treturn true;\r\n\t\t// } else {\r\n\t\t// \treturn false;\r\n\t\t// }\r\n\t}\r\n\t/**设置背包里的物品 */\r\n\tpublic setBackPack(backpack: BackPackComponent) {\r\n\t\tthis.backpack = backpack;\r\n\t\tbackpack.setOwner(this);\r\n\t}\r\n\t/**拾取工具 */\r\n\tpublic pickUpTool() {\r\n\t\tthis.tool = new ToolComponent();\r\n\t\tconsole.log('拾取工具', this.constructor.name)\r\n\t\t//let tool = \r\n\t\t// tool.node.x = 18;\r\n\t\t// tool.node.y = 35;\r\n\t\t//\ttool.node.getComponent(cc.Sprite).spriteFrame = ToolType.getSource(this.bean.toolType);\r\n\t\t// this.addChild(tool);\r\n\t}\r\n\t/**销毁工具 */\r\n\tpublic destroyTool() {\r\n\t\t//this.removeChild(this.tool);\r\n\t\tthis.tool = undefined;\r\n\t}\r\n\r\n\tpublic updateBackPack() {\r\n\r\n\t}\r\n}"]}